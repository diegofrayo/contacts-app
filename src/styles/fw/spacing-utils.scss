@use "sass:string";

@function to-string($value) {
	@if (type-of($value) == "number") {
		@return #{$value};
	} @else if (type-of($value) == "string") {
		@return $value;
	} @else {
		@error 'Input #{$value} is not a  number or string';
	}
}

@function escape-class-name($class) {
	$result: to-string($class);
	$dotIndex: string.index($result, ".");

	@if ($dotIndex) {
		$result: string.insert($result, "\\", $dotIndex);
	}

	@return $result;
}

@mixin generate-spacing-classes($property, $orientation, $selectorSize, $value) {
	$propertyShorthand: #{if($property == padding, "p", "m")};

	@if ($orientation == "all") {
		$sides: (
			"t": "top",
			"l": "left",
			"r": "right",
			"b": "bottom",
		);

		@each $sideShorthand, $side in $sides {
			.fw-#{$propertyShorthand}#{$sideShorthand}-#{$selectorSize} {
				#{$property}-#{$side}: $value;
			}
		}
	} @else {
		.fw-#{$propertyShorthand}#{$orientation}-#{$selectorSize} {
			@if ($orientation == "x") {
				#{$property}-left: $value;
				#{$property}-right: $value;
			} @else {
				#{$property}-bottom: $value;
				#{$property}-top: $value;
			}
		}
	}
}
